whitespace = _{ "\u{20}" | "\u{09}" | "\u{0D}" | "\u{0A}" }
comment = _{ "#" ~ (!("\u{27}" | "\u{5C}" | "\u{0A}" | "\u{0D}") ~ any)* }

turtleDoc = { soi ~ statement* ~ eoi }
statement = { directive | (triples ~ ".") }
directive = { prefixID | base | sparqlPrefix | sparqlBase }
prefixID = { "@prefix" ~ PNAME_NS ~ IRIREF ~ "." }
base = { "@base" ~ IRIREF ~ "." }
sparqlBase = { ^"BASE" ~ IRIREF }
sparqlPrefix = { ^"PREFIX" ~ PNAME_NS ~ IRIREF }
triples = {
    (subject ~ predicateObjectList) |
    (blankNodePropertyList ~ predicateObjectList?)
}

predicateObjectList = { verb ~ objectList ~ (";" ~ ( verb ~ objectList )? )* }
objectList = { object ~ ("," ~ object)* }
verb = { iri | "a" }
subject = { iri | BlankNode | collection }
predicate = { iri }
object = { iri | BlankNode | collection | blankNodePropertyList | literal }
literal = { RDFLiteral | NumericLiteral | BooleanLiteral }
blankNodePropertyList = { "[" ~ predicateObjectList ~ "]" }
collection = { "(" ~ object* ~ ")" }
NumericLiteral = { DOUBLE | DECIMAL | INTEGER }
RDFLiteral = ${ STRING ~ ( LANGTAG | ("^^" ~ iri) )? }
BooleanLiteral = { "true" | "false" }

STRING = !{
    STRING_LITERAL_LONG_SINGLE_QUOTE |
    STRING_LITERAL_LONG_QUOTE |
    STRING_LITERAL_QUOTE |
    STRING_LITERAL_SINGLE_QUOTE
}

iri = { IRIREF | PrefixedName }
PrefixedName = { PNAME_LN | PNAME_NS }
BlankNode = { BLANK_NODE_LABEL | ANON }
IRIREF = ${ "<" ~ IRI_VALUE? ~ ">" }

IRI_VALUE = ${
    (
        (
            !( '\u{00}'..'\u{20}' |
                "<" | ">" | "\"" | "{" | "}" | "|" | "^" | "`" | "\\"
            ) ~
            any
        ) |
        UCHAR
    )+
}

PNAME_NS = ${ PN_PREFIX? ~ ":" }
PNAME_LN = ${ PNAME_NS ~ PN_LOCAL }
BLANK_NODE_LABEL = ${
    "_:" ~ BLANK_NODE_VALUE
}

BLANK_NODE_VALUE = {
    (PN_CHARS_U | '0'..'9') ~ (PN_CHARS | ( "." ~ PN_CHARS ))*
}

LANGTAG =  @{
    "@" ~ ('a'..'z' | 'A'..'Z')+ ~ ("-" ~ ('a'..'z' | 'A'..'Z' | '0'..'9')+)*
}

INTEGER = @{ ("+" | "-")? ~ ('0'..'9')+ }
DECIMAL = @{ ("+" | "-")? ~ ('0'..'9')* ~ "." ~ ('0'..'9')+ }
DOUBLE =  @{
    ("+" | "-")? ~
    (
        ( ('0'..'9')+ ~ "." ~ ('0'..'9')* ~ EXPONENT ) |
        ( "." ~ ('0'..'9')+ ~ EXPONENT ) |
        ( ('0'..'9')+ ~ EXPONENT )
    )
}

EXPONENT = { ("e" | "E") ~ ("+" | "-")? ~ ('0'..'9')+ }
STRING_LITERAL_QUOTE = { "\"" ~ STRING_VALUE* ~ "\"" }
STRING_LITERAL_SINGLE_QUOTE = { "'" ~ SINGLE_STRING_VALUE* ~ "'" }
STRING_LITERAL_LONG_SINGLE_QUOTE = { "'''" ~ SINGLE_LONG_STRING_VALUE* ~ "'''" }
SINGLE_LONG_STRING_VALUE = { ("''" | "'")? ~ (ECHAR | UCHAR | (!"'" ~ any)+) }
STRING_LITERAL_LONG_QUOTE = ${ "\"\"\"" ~ LONG_STRING_VALUE* ~ "\"\"\"" }
LONG_STRING_VALUE = { ("\"\"" | "\"")? ~ (!("\"" | "\\") ~ any) | ECHAR | UCHAR }

STRING_VALUE = {
    ECHAR |
    UCHAR |
    (!( "\u{22}" | "\u{5C}" | "\u{0A}" | "\u{0D}" ) ~ any)+
}

SINGLE_STRING_VALUE = {
    ECHAR |
    UCHAR |
    (!("\u{27}" | "\u{5C}" | "\u{0A}" | "\u{0D}") ~ any)+
}

UCHAR = ${ ("\\u" ~ HEX{4}) | ("\\U" ~ HEX{8}) }
ECHAR = @{ "\\" ~ ( "t" | "b" | "n" | "r" | "f" | "\"" | "'" | "\\") }
ANON = { "[" ~ "]" }

PN_CHARS_BASE = _{
    'A'..'Z' |
    'a'..'z' |
    '\u{00C0}'..'\u{00D6}' |
    '\u{00D8}'..'\u{00F6}' |
    '\u{00F8}'..'\u{02FF}' |
    '\u{0370}'..'\u{037D}' |
    '\u{037F}'..'\u{1FFF}' |
    '\u{200C}'..'\u{200D}' |
    '\u{2070}'..'\u{218F}' |
    '\u{2C00}'..'\u{2FEF}' |
    '\u{3001}'..'\u{D7FF}' |
    '\u{F900}'..'\u{FDCF}' |
    '\u{FDF0}'..'\u{FFFD}' |
    '\u{10000}'..'\u{EFFFF}'
}

PN_CHARS_U = _{ PN_CHARS_BASE | "_" }
PN_CHARS = _{
    PN_CHARS_U |
    "-" |
    '0'..'9' |
    "\u{00B7}" |
    '\u{0300}'..'\u{036F}' |
    '\u{203F}'..'\u{2040}'
}

PN_PREFIX = @{ PN_CHARS_BASE ~ ("."* ~ PN_CHARS)* }
PN_LOCAL = @{
    (PN_CHARS_U | ":" | '0'..'9' | PLX) ~
    ( "."* ~ (PN_CHARS | ":" | PLX) )*
}


PLX = @{ PERCENT | PN_LOCAL_ESC }
PERCENT = { "%" ~ HEX{2} }
HEX = { '0'..'9' | 'a'..'f' | 'A'..'F' }

PN_LOCAL_ESC = !{
    "\\" ~
     ("_" | "~" | "." | "-" | "!" | "$" | "&" | "'" | "(" | ")" |
      "*" | "+" | "," | ";" | "=" | "/" | "?" | "#" | "@" | "%")
}
